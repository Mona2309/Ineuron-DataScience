1.What is the relationship between classes and modules?
The difference between a class and a module in python is that a class is used to define a blueprint for a given object, 
whereas a module is used to reuse a given piece of code inside another program

2.Use the class name to create a new instance
Call ClassName() to create a new instance of the class ClassName . To pass parameters to the class instance,
the class must have an __init__() method. Pass the parameters in the constructor of the class.

3.Where and how should be class attributes created?
Class attributes belong to the class itself they will be shared by all the instances.
Such attributes are defined in the class body parts usually at the 
top, for legibility. Unlike class attributes, instance attributes are not shared by objects.

4.Where and how are instance attributes created?
An instance attribute is a Python variable belonging to one, and only one, object. This variable is only accessible in the 
scope of this object and it is defined inside the constructor function, __init__(self,..) of the class

5.What does the term "self" in a Python class mean?
The self parameter is a reference to the current instance of the class, and 
is used to access variables that belongs to the class.

6.How does a Python class handle operator overloading
The operator overloading in Python means provide extended meaning beyond their predefined operational meaning.
Such as, we use the "+" operator for adding two integers as well as joining two strings or merging two lists.
We can achieve this as the "+" operator is overloaded by the "int" class and "str" class.

7.When do you consider allowing operator overloading of your classes?
Operator Overloading means giving extended meaning beyond their predefined operational meaning. 
For example operator + is used to add two integers as well as join two 
strings and merge two lists. It is achievable because '+' operator is overloaded by int class and str class

8.What is the most popular form of operator overloading?
A very popular and convenient example is the Addition (+) operator. The '+' operator operates on two numbers and the same operator 
operates on two strings. It performs “Addition” on numbers whereas it performs “Concatenation” on strings.

9.What are the two most important concepts to grasp in order to comprehend Python OOP code?
Both inheritance and polymorphism are fundamental concepts of object oriented programming.
These concepts help us to create code that can be extended and easily maintainable











